plugins {
  id 'java'
  id 'eclipse'
  id 'idea'

  id 'maven-publish'

  id 'fabric-loom' version '1.0-SNAPSHOT'
}

def ENV = System.getenv()

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
tasks.withType(JavaCompile).configureEach { it.options.release = 17 }

String ver = "${project.version_id}+${project.major_version}-fabric"
version = ENV.GITHUB_ACTIONS ? "${ver}.build.${ENV.GITHUB_RUN_NUMBER}" : ver

archivesBaseName = project.mod_id
group = project.maven_group

repositories {
  maven {
    name = 'Terraformers'
    url  = 'https://maven.terraformersmc.com/releases/'
  }
}

dependencies {
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
  modApi "net.fabricmc:fabric-loader:${project.loader_version}"
  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
}

sourceSets {
  test {
    compileClasspath += main.compileClasspath
    runtimeClasspath += main.runtimeClasspath
  }
}

loom {
  runs {
    testClient {
      name "Minecraft Client (Test)"
      client()
      source sourceSets.test
    }

    testServer {
      name "Minecraft Server (Test)"
      server()
      source sourceSets.test
    }
  }
}

processResources {
  inputs.property "version", project.version

  filesMatching("fabric.mod.json") {
    expand "version": project.version
  }
}

loom {
  splitEnvironmentSourceSets()
}

/* Publishing */

java { withSourcesJar() }

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact(remapJar) { builtBy remapJar }
      artifact(sourcesJar) { builtBy remapSourcesJar }
    }
  }
}

loom { disableDeprecatedPomGeneration(publishing.publications.mavenJava) }
