//file:noinspection All

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm'

    id 'fabric-loom' version '1.4-SNAPSHOT'
}

import groovy.json.JsonOutput
import groovy.json.JsonSlurper

version = mod_version
group = maven_group

compileKotlin.kotlinOptions.jvmTarget = "17"

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$minecraft_version+build.$yarn_build:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    include modImplementation ("net.fabricmc:fabric-language-kotlin:$fabric_kotlin_version")

    testImplementation sourceSets.main.output
}

sourceSets {
    test
}

processResources {
    inputs.property "version", version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")

    runs {
        testServer {
            server()

            name = "Minecraft Server (Test)"
            source sourceSets.test
        }
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        // Andante's Maven
        def mavenUsername = ENV["MAVEN_USERNAME_ANDANTE"]
        def mavenPassword = ENV["MAVEN_PASSWORD_ANDANTE"]
        if (mavenUsername && mavenPassword) {
            maven {
                name = "Andante"
                url  = "https://maven.andante.dev/releases/"
                credentials.username = mavenUsername
                credentials.password = mavenPassword
            }
        }
    }
}
